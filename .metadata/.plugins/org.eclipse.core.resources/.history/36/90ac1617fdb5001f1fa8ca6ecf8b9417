package java8features;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class StreamPipeLineDemo {
public static void main(String[] args) {
		List<Integer> salaries = Arrays.asList(50000, 40000, 20000, 30000, 60000);
		System.out.println(salaries);
		
		/* 
		  1.Filter the salaries which are >=50000
		  2.Increment the filtered salaries by 10%  //55000+66000
	      3.Find the total of filtered and incremented salaries //1,11,000
		  Expected output:
		 */
             
        List<Integer> filteredSalaries = salaries.stream()
                .filter(salary -> salary >= 50000)
                .collect(Collectors.toList());
        System.out.println("Filtered Salaries: " + filteredSalaries);
        
        List<Integer> incrementedSalaries = filteredSalaries.stream()
                .map(salary -> (int) (salary * 1.10)) 
                .collect(Collectors.toList());
        System.out.println("Incremented Salaries: " + incrementedSalaries);

        
        int totalSalary = incrementedSalaries.stream()
                .mapToInt(Integer::intValue)
                .sum();
            System.out.println("Total Salary: " + totalSalary);
	}

}
